#BlueJ class context
comment0.target=Etiqueta
comment0.text=\r\n\ Una\ clase\ etiqueta\ que\ tiene\ un\ costo\r\n\ \r\n\ @author\ \ \ \ \ \ Hardoy\ -\ Harvey\ \r\n\ @version\ \ \ \ \ 20/10/2025\r\n
comment1.params=p_costo
comment1.target=Etiqueta(double)
comment1.text=\r\n\ Constructor\ de\ la\ clase\ Etiqueta\r\n\ \r\n\ @param\ \ \ \ p_costo\ \ \ \ \ costo\ de\ la\ etiqueta\r\n
comment2.params=p_costo
comment2.target=void\ setCosto(double)
comment3.params=
comment3.target=double\ getCosto()
comment4.params=q
comment4.target=double\ precio(int)
comment4.text=\r\n\ Metodo\ abstracto\ para\ implementar\ en\ las\ hijas\ el\ metodo\ precio\r\n\ \r\n\ @param\ \ \ \ q\ \ \ cantidad\ de\ etiquetas\r\n\ @return\ \ \ devuelve\ un\ valor\ que\ es\ el\ precio\ total\ de\ las\ etiquetas\r\n
comment5.params=
comment5.target=java.lang.String\ tipo()
comment5.text=\r\n\ Metodo\ abstracto\ para\ implementar\ en\ las\ hijas\ el\ metodo\ tipo\r\n\ \r\n\ @return\ \ \ devuelve\ una\ cadena\ que\ es\ el\ tipo\ de\ etiqueta\ del\ objeto\r\n
comment6.params=
comment6.target=java.lang.String\ toString()
comment6.text=\r\n\ Metodo\ para\ mostrar\ una\ cadena\ con\ el\ tipo\ de\ etiqueta\ y\ su\ informacion\r\n\ \r\n\ @return\ \ \ devuelve\ una\ cadena\ con\ la\ informacion\ del\ objeto\r\n
numComments=7
